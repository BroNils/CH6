<!DOCTYPE html>
<html>
  <!--
    WARNING! Make sure that you match all Quasar related
    tags to the same version! (Below it's "@2.6.6")
  -->

  <head>
    <title><%- title %></title>

    <meta charset="utf-8">
    <meta name="description" content="Binar Challenge 05">
    <meta name="format-detection" content="telephone=no">
    <meta name="msapplication-tap-highlight" content="no">
    <meta name=viewport content="user-scalable=no,initial-scale=1,maximum-scale=1,minimum-scale=1,width=device-width">

    <link href="css/font.css" rel="stylesheet" type="text/css">
    <link href="css/materialdesignicons.min.css" rel="stylesheet" type="text/css">
    <link href="css/animate.min.css" rel="stylesheet" type="text/css">
    <link href="css/quasar.rtl.prod.css" rel="stylesheet" type="text/css">
    <link href="css/style.css" rel="stylesheet" type="text/css">
  </head>

  <body>
    <!-- example of injection point where you write your app template -->
    <div id="q-app">
      <q-layout view="hhh lpr fff">

        <q-page-container>
          <q-page class="flex flex-center column">
            <q-card class="custom-card">
              <q-card-section>
                <q-table
                  title="UserGame"
                  :rows="rowsUserGame"
                  row-key="name"
                  hide-pagination
                >
                </q-table>
                <div class="q-my-md flex row full-width flex-center">
                  <q-btn href="/add_user_game" flat round color="primary" icon="mdi-plus">
                  </q-btn>
                  <q-btn href="/delete_user_game" flat round color="primary" icon="mdi-delete">
                  </q-btn>
                  <q-btn href="/update_user_game" flat round color="primary" icon="mdi-pencil-outline">
                  </q-btn>
                </div>
                <span v-if="errorMsgUG">
                  {{ errorMsgUG }}
                </span>
              </q-card-section>
              <q-card-section >
                <q-table
                  title="UserGameBiodata"
                  :rows="rowsUserGameBiodata"
                  row-key="name"
                  hide-pagination
                >
                </q-table>
                <div class="q-my-md flex row full-width flex-center">
                  <q-btn href="/add_user_game_biodata" flat round color="primary" icon="mdi-plus">
                  </q-btn>
                  <q-btn href="/delete_user_game_biodata" flat round color="primary" icon="mdi-delete">
                  </q-btn>
                  <q-btn href="/update_user_game_biodata" flat round color="primary" icon="mdi-pencil-outline">
                  </q-btn>
                </div>
                <span v-if="errorMsgUGB">
                  {{ errorMsgUGB }}
                </span>
              </q-card-section>
              <q-card-section >
                <q-table
                  title="UserGameHistory"
                  :rows="rowsUserGameHistory"
                  row-key="name"
                  hide-pagination
                >
                </q-table>
                <div class="q-my-md flex row full-width flex-center">
                  <q-btn href="/add_user_game_history" flat round color="primary" icon="mdi-plus">
                  </q-btn>
                  <q-btn href="/delete_user_game_history" flat round color="primary" icon="mdi-delete">
                  </q-btn>
                  <q-btn href="/update_user_game_history" flat round color="primary" icon="mdi-pencil-outline">
                  </q-btn>
                </div>
                <span v-if="errorMsgUGH">
                  {{ errorMsgUGH }}
                </span>
              </q-card-section>
            </q-card>

            <q-page-sticky position="bottom-right" :offset="[18, 18]">
              <q-btn href="/logout" fab icon="mdi-door-open"/>
            </q-page-sticky>
          </q-page>
        </q-page-container>

      </q-layout>
    </div>

    <!-- Add the following at the end of your body tag -->
    <script src="js/vue.global.prod.js"></script>
    <script src="js/quasar.umd.prod.js"></script>
    <script src="js/svg-mdi-v6.umd.prod.js"></script>
    <script src="js/axios.min.js"></script>

    <script>
      /*
        Example kicking off the UI. Obviously, adapt this to your specific needs.
        Assumes you have a <div id="q-app"></div> in your <body> above
       */
      const app = Vue.createApp({
        setup () {
          if(!Quasar.LocalStorage.has('token')){
            window.location.href = '/';
            return;
          }

          const errorMsgUG = Vue.ref('');
          const rowsUserGame = Vue.reactive([]);

          axios.get('/api/user_games', {
            headers: {
              'token': Quasar.LocalStorage.getItem('token')
            }
          }).then(function (response) {
            if(response.status != 200 || response.data.error){
              errorMsgUG.value = response.data.message;
              return;
            }

            var data = response.data.data;
            data.forEach(function (item) {
              rowsUserGame.push(item);
            });
          }).catch(function (error) {
            errorMsgUG.value = error.toString();
          });

          const errorMsgUGB = Vue.ref('');
          const rowsUserGameBiodata = Vue.reactive([]);

          axios.get('/api/user_game_biodatas', {
            headers: {
              'token': Quasar.LocalStorage.getItem('token')
            }
          }).then(function (response) {
            if(response.status != 200 || response.data.error){
              errorMsgUGB.value = response.data.message;
              return;
            }

            var data = response.data.data;
            data.forEach(function (item) {
              rowsUserGameBiodata.push(item);
            });
          }).catch(function (error) {
            errorMsgUGB.value = error.toString();
          });

          const errorMsgUGH = Vue.ref('');
          const rowsUserGameHistory = Vue.reactive([]);

          axios.get('/api/user_game_histories', {
            headers: {
              'token': Quasar.LocalStorage.getItem('token')
            }
          }).then(function (response) {
            if(response.status != 200 || response.data.error){
              errorMsgUGH.value = response.data.message;
              return;
            }

            var data = response.data.data;
            data.forEach(function (item) {
              rowsUserGameHistory.push(item);
            });
          }).catch(function (error) {
            errorMsgUGH.value = error.toString();
          });

          return {
            errorMsgUG,
            rowsUserGame,
            errorMsgUGB,
            rowsUserGameBiodata,
            errorMsgUGH,
            rowsUserGameHistory
          }
        }
      })

      app.use(Quasar, {
        config: {
          /*
          brand: {
            // primary: '#e46262',
            // ... or all other brand colors
          },
          notify: {...}, // default set of options for Notify Quasar plugin
          loading: {...}, // default set of options for Loading Quasar plugin
          loadingBar: { ... }, // settings for LoadingBar Quasar plugin
          // ..and many more (check Installation card on each Quasar component/directive/plugin)
          */
        }
      })
      Quasar.iconSet.set(Quasar.iconSet.svgMdiV6)
      app.mount('#q-app')
    </script>
  </body>
</html>
